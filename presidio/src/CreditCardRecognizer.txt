# CreditCardRecognizer.py

from presidio_analyzer import PatternRecognizer, Pattern

class CreditCardRecognizer(PatternRecognizer):
    CONTEXT_WORDS = ["credit card", "debit card", "card number", "visa", "mastercard", "amex", "discover"]

    def __init__(self):
        patterns = [
            Pattern(name='visa', regex=r'\b4[0-9]{12}(?:[0-9]{3})?\b', score=0.5),
            Pattern(name='mastercard', regex=r'\b5[1-5][0-9]{14}\b', score=0.5),
            Pattern(name='amex', regex=r'\b3[47][0-9]{13}\b', score=0.5),
            Pattern(name='discover', regex=r'\b6(?:011|5[0-9]{2})[0-9]{12}\b', score=0.5)
        ]
        super().__init__(supported_entity="CREDIT_CARD", patterns=patterns)

    def analyze(self, text, entities, nlp_artifacts=None):
        results = super().analyze(text, entities, nlp_artifacts)
        filtered_results = []

        for result in results:
            context_found = False
            # Check for context words around the credit card number
            window_start = max(0, result.start - 20)
            window_end = min(len(text), result.end + 20)
            context_window = text[window_start:window_end].lower()

            for context_word in self.CONTEXT_WORDS:
                if context_word in context_window:
                    context_found = True
                    break

            if context_found:
                filtered_results.append(result)

        return filtered_results
