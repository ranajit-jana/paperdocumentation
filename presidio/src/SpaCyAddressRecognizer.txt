import spacy
import os
from presidio_analyzer import RecognizerResult, EntityRecognizer


class SpaCyAddressRecognizer(EntityRecognizer):
    def __init__(self, model_path, supported_entities=["ADDRESS"], supported_language="en"):
        super().__init__(supported_entities=supported_entities, supported_language=supported_language)
        current_working_directory = os.getcwd()

        # Print the current working directory
        print("Current working directory:", current_working_directory)
        print(" model path" + model_path)
        self.model = spacy.load(model_path)
        
    def load(self):
        pass  # Model is already loaded in __init__

    def analyze(self, text, entities, nlp_artifacts=None):
        results = []
        doc = self.model(text)
        for ent in doc.ents:
            if ent.label_ in entities:
                results.append(RecognizerResult(
                    entity_type=ent.label_,
                    start=ent.start_char,
                    end=ent.end_char,
                    score=ent.kb_id_ if ent.kb_id_ else 0.85 # this score not calculated score
                ))
        return results

# Path to your trained spaCy model
model_path = "addresstrain/spacydata/model-best"

